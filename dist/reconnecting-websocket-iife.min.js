var ReconnectingWebSocket=function(){"use strict";const e=()=>{if("undefined"!=typeof window)return window.WebSocket;if("undefined"!=typeof global)return global.WebSocket;throw Error("Unknown environment")},t=e=>"function"!=typeof e||!e.OPEN,s={maxReconnectionDelay:1e4,minReconnectionDelay:1e3+4e3*Math.random(),minUptime:5e3,reconnectionDelayGrowFactor:1.3,connectionTimeout:4e3,maxRetries:1/0,debug:!1};class n{constructor(e,t,s){this._listeners={open:[],close:[],error:[],message:[]},this._retryCount=0,this.onclose=(e=>void 0),this.onerror=(e=>void 0),this.onmessage=(e=>void 0),this.onopen=(e=>void 0),this._url=e,this._protocols=t,this._options=s,this._connect()}static get CONNECTING(){return 0}static get OPEN(){return 1}static get CLOSING(){return 2}static get CLOSED(){return 3}get CONNECTING(){return n.CONNECTING}get OPEN(){return n.OPEN}get CLOSING(){return n.CLOSING}get CLOSED(){return n.CLOSED}get bufferedAmount(){return this._ws?this._ws.bufferedAmount:0}get extensions(){return this._ws?this._ws.extensions:""}get protocol(){return this._ws?this._ws.protocol:""}get readyState(){return this._ws?this._ws.readyState:n.CONNECTING}get url(){return this._ws?this._ws.url:""}close(e,t){}send(e){this._ws&&this._ws.send(e)}addEventListener(e,t){this._listeners[e]=this._listeners[e]||[],this._listeners[e].push(t)}removeEventListener(e,t){this._listeners[e]&&(this._listeners[e]=this._listeners[e].filter(e=>e!==t))}_debug(...e){this._options.debug&&console.log("RWS>",...e)}_getNextDelay(){let e=0;if(this._retryCount>0){const{reconnectionDelayGrowFactor:t=s.reconnectionDelayGrowFactor,minReconnectionDelay:n=s.minReconnectionDelay,maxReconnectionDelay:i=s.maxReconnectionDelay}=this._options;(e=n+Math.pow(this._retryCount-1,t))>i&&(e=i)}return this._debug("next delay",e),e}_wait(){return new Promise(e=>{setTimeout(e,this._getNextDelay())})}_getNextUrl(e){if("string"==typeof e)return Promise.resolve(e);if("function"==typeof e){const t=e();if("string"==typeof t)return Promise.resolve(t);if(t.then)return t}throw Error("Invalid URL")}_connect(){const{maxRetries:n=s.maxRetries}=this._options;if(0!==this._retryCount&&this._retryCount>=n)return void this._debug("max retries reached",n);this._retryCount++,this._debug("connect"),this._removeListeners();const i=this._options.WebSocket||e();if(t(i))throw Error("No valid WebSocket class provided");this._wait().then(()=>this._getNextUrl(this._url)).then(e=>{this._debug("connect",{url:e,protocols:this._protocols}),this._ws=new i(e,this._protocols),this._addListeners()})}_disconnect(){this._ws&&(this._removeListeners(),this._ws.close())}_acceptOpen(){this._retryCount=0}_handleOpen(e){this._debug("open event");const{minUptime:t=s.minUptime}=this._options;this._uptimeTimeout=setTimeout(this._acceptOpen,t),this.onopen(e),this._listeners.open.forEach(t=>t(e))}_handleMessage(e){this._debug("message event"),this.onmessage(e),this._listeners.message.forEach(t=>t(e))}_handleError(e){this._debug("error event"),this._disconnect(),this.onerror(e),this._listeners.error.forEach(t=>t(e)),this._connect()}_handleClose(e){this._debug("close event"),this.onclose(e),this._listeners.close.forEach(t=>t(e))}_removeListeners(){this._ws&&(this._debug("removeListeners"),this._ws.removeEventListener("error",e=>this._handleError(e)),this._ws.removeEventListener("close",e=>this._handleClose(e)),this._ws.removeEventListener("message",e=>this._handleMessage(e)),this._ws.removeEventListener("open",e=>this._handleOpen(e)))}_addListeners(){this._debug("assignListeners"),this._ws.addEventListener("error",e=>this._handleError(e)),this._ws.addEventListener("close",e=>this._handleClose(e)),this._ws.addEventListener("message",e=>this._handleMessage(e)),this._ws.addEventListener("open",e=>this._handleOpen(e))}}return n}();